{"ast":null,"code":"import _toConsumableArray from \"/Users/wenhanzhang/Desktop/oa test/eog/wenhan-eog-react-assessment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/wenhanzhang/Desktop/oa test/eog/wenhan-eog-react-assessment/src/Features/Metrics/Metrics.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Provider, createClient, defaultExchanges, subscriptionExchange } from 'urql';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\nimport { Grid } from '@material-ui/core';\nimport MetricSelector from '../../components/MetricSelector';\nimport { useSelector } from 'react-redux';\nimport ChartGraph from '../../components/ChartGraph';\nimport LatestValueSection from '../../components/LatestValueSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar subscriptionClient = new SubscriptionClient(\"ws://react.eogresources.com/graphql\", {\n  reconnect: true\n});\nexport var client = createClient({\n  url: \"https://react.eogresources.com/graphql\",\n  exchanges: [].concat(_toConsumableArray(defaultExchanges), [subscriptionExchange({\n    forwardSubscription: function forwardSubscription(operation) {\n      return subscriptionClient.request(operation);\n    }\n  })])\n});\nexport default (function () {\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    value: client,\n    children: /*#__PURE__*/_jsxDEV(Metrics, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 12\n  }, _this);\n});\n\nvar getSelectedMetrics = function getSelectedMetrics(state) {\n  return state.metrics.selectedMetrics;\n};\n\nvar Metrics = function Metrics() {\n  _s();\n\n  var selectedMetrics = useSelector(getSelectedMetrics);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      item: true,\n      xs: 12,\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        spacing: 2,\n        direction: \"row-reverse\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 5,\n          children: /*#__PURE__*/_jsxDEV(MetricSelector, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 7,\n          md: 6,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: /*#__PURE__*/_jsxDEV(LatestValueSection, {\n              selectedMetrics: selectedMetrics\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        xs: 12,\n        justify: \"center\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(ChartGraph, {\n          selectedMetrics: selectedMetrics\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 12\n  }, _this);\n};\n\n_s(Metrics, \"Lk/2Dma/mQ/uKHB8VA5qJ7jGJA8=\", false, function () {\n  return [useSelector];\n});\n\n_c = Metrics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Metrics\");","map":{"version":3,"sources":["/Users/wenhanzhang/Desktop/oa test/eog/wenhan-eog-react-assessment/src/Features/Metrics/Metrics.tsx"],"names":["React","Provider","createClient","defaultExchanges","subscriptionExchange","SubscriptionClient","Grid","MetricSelector","useSelector","ChartGraph","LatestValueSection","subscriptionClient","reconnect","client","url","exchanges","forwardSubscription","operation","request","getSelectedMetrics","state","metrics","selectedMetrics","Metrics"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Provider, createClient, defaultExchanges, subscriptionExchange } from 'urql';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\nimport { Grid } from '@material-ui/core';\nimport MetricSelector from '../../components/MetricSelector';\nimport { useSelector } from 'react-redux';\nimport { IState } from '../../store';\nimport ChartGraph from '../../components/ChartGraph';\nimport LatestValueSection from '../../components/LatestValueSection';\n\nconst subscriptionClient = new SubscriptionClient(\n    `ws://react.eogresources.com/graphql`,\n    {\n        reconnect: true,\n    }\n)\n\nexport const client = createClient({\n    url: `https://react.eogresources.com/graphql`,\n    exchanges: [\n        ...defaultExchanges,\n        subscriptionExchange({\n            forwardSubscription: (operation) => subscriptionClient.request(operation)\n        })\n    ]\n})\n\nexport default () => {\n    return <Provider value={client}>\n        <Metrics />\n    </Provider>\n}\n\nconst getSelectedMetrics = (state: IState) => state.metrics.selectedMetrics;\n\nconst Metrics = () => {\n    const selectedMetrics = useSelector(getSelectedMetrics);\n    return <Grid container>\n        <Grid container item xs={12} spacing={4}>\n            <Grid item container spacing={2} direction='row-reverse'>\n                <Grid item xs={12} md={6} lg={5}>\n                    <MetricSelector />\n                </Grid>\n                <Grid item lg={7} md={6} xs={12}>\n                    <Grid container spacing={2}>\n                        <LatestValueSection selectedMetrics={selectedMetrics} />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item container xs={12} justify='center' alignItems='center'>\n                <ChartGraph selectedMetrics={selectedMetrics} />\n            </Grid>\n        </Grid>\n    </Grid>\n}"]},"metadata":{},"sourceType":"module"}