{"ast":null,"code":"import { createSlice } from 'redux-starter-kit';\nvar initialState = {\n  temperatureinCelsius: 0,\n  temperatureinFahrenheit: 0,\n  description: '',\n  locationName: ''\n};\n\nvar toF = function toF(c) {\n  return c * 9 / 5 + 32;\n};\n\nvar slice = createSlice({\n  name: 'weather',\n  initialState: initialState,\n  reducers: {\n    weatherDataRecevied: function weatherDataRecevied(state, action) {\n      var _action$payload = action.payload,\n          description = _action$payload.description,\n          locationName = _action$payload.locationName,\n          temperatureinCelsius = _action$payload.temperatureinCelsius;\n      state.temperatureinCelsius = temperatureinCelsius;\n      state.temperatureinFahrenheit = toF(temperatureinCelsius);\n      state.description = description;\n      state.locationName = locationName;\n    },\n    weatherApiErrorReceived: function weatherApiErrorReceived(state, action) {\n      return state;\n    }\n  }\n});\nexport var reducer = slice.reducer;\nexport var actions = slice.actions;","map":{"version":3,"sources":["/Users/wenhanzhang/Desktop/oa test/eog/wenhan-eog-react-assessment/src/Features/Weather/reducer.ts"],"names":["createSlice","initialState","temperatureinCelsius","temperatureinFahrenheit","description","locationName","toF","c","slice","name","reducers","weatherDataRecevied","state","action","payload","weatherApiErrorReceived","reducer","actions"],"mappings":"AAAA,SAASA,WAAT,QAA2C,mBAA3C;AAYA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,oBAAoB,EAAE,CADH;AAEnBC,EAAAA,uBAAuB,EAAE,CAFN;AAGnBC,EAAAA,WAAW,EAAE,EAHM;AAInBC,EAAAA,YAAY,EAAE;AAJK,CAArB;;AAOA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,CAAD;AAAA,SAAgBA,CAAC,GAAG,CAAL,GAAU,CAAV,GAAc,EAA7B;AAAA,CAAZ;;AAEA,IAAMC,KAAK,GAAGR,WAAW,CAAC;AACxBS,EAAAA,IAAI,EAAE,SADkB;AAExBR,EAAAA,YAAY,EAAZA,YAFwB;AAGxBS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,mBAAmB,EAAE,6BAACC,KAAD,EAAQC,MAAR,EAAsD;AACzE,4BAA4DA,MAAM,CAACC,OAAnE;AAAA,UAAQV,WAAR,mBAAQA,WAAR;AAAA,UAAqBC,YAArB,mBAAqBA,YAArB;AAAA,UAAmCH,oBAAnC,mBAAmCA,oBAAnC;AACAU,MAAAA,KAAK,CAACV,oBAAN,GAA6BA,oBAA7B;AACAU,MAAAA,KAAK,CAACT,uBAAN,GAAgCG,GAAG,CAACJ,oBAAD,CAAnC;AACAU,MAAAA,KAAK,CAACR,WAAN,GAAoBA,WAApB;AACAQ,MAAAA,KAAK,CAACP,YAAN,GAAqBA,YAArB;AACD,KAPO;AAQRU,IAAAA,uBAAuB,EAAE,iCAACH,KAAD,EAAQC,MAAR;AAAA,aAAkDD,KAAlD;AAAA;AARjB;AAHc,CAAD,CAAzB;AAeA,OAAO,IAAMI,OAAO,GAAGR,KAAK,CAACQ,OAAtB;AACP,OAAO,IAAMC,OAAO,GAAGT,KAAK,CAACS,OAAtB","sourcesContent":["import { createSlice, PayloadAction } from 'redux-starter-kit';\n\nexport type WeatherForLocation = {\n  description: string;\n  locationName: string;\n  temperatureinCelsius: number;\n};\n\nexport type ApiErrorAction = {\n  error: string;\n};\n\nconst initialState = {\n  temperatureinCelsius: 0,\n  temperatureinFahrenheit: 0,\n  description: '',\n  locationName: '',\n};\n\nconst toF = (c: number) => (c * 9) / 5 + 32;\n\nconst slice = createSlice({\n  name: 'weather',\n  initialState,\n  reducers: {\n    weatherDataRecevied: (state, action: PayloadAction<WeatherForLocation>) => {\n      const { description, locationName, temperatureinCelsius } = action.payload;\n      state.temperatureinCelsius = temperatureinCelsius;\n      state.temperatureinFahrenheit = toF(temperatureinCelsius);\n      state.description = description;\n      state.locationName = locationName;\n    },\n    weatherApiErrorReceived: (state, action: PayloadAction<ApiErrorAction>) => state,\n  },\n});\n\nexport const reducer = slice.reducer;\nexport const actions = slice.actions;\n"]},"metadata":{},"sourceType":"module"}